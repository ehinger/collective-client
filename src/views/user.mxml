<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="onCC()"
		actionBarVisible="false" tabBarVisible="false" title="user">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import connectivity.*;
			
			import spark.components.Group;
			import spark.components.Label;
			import spark.events.ViewNavigatorEvent;
			
			protected var userName:Label = new Label;
			protected var pts:Label = new Label;
			protected var resource:String;
			protected var p:String;
			protected var resource1:Object = new Object;
			protected var rgroup:Group;
			
			protected function onCC():void {
				ServerAccess.getProfile(ServerAccess.getUserId(), profileInfo);
			}
			
			protected function profileInfo(response:Response):void {
				if (response.isSuccess()) 
				{
					// Do successful operation stuffs.  use response.data to access returned data.
					trace('success!  ' + response.getData());
					
				this.resource = new String;
				this.p = new String;
				resource1 = response.getData();
				resource = resource1.firstName + " " + resource1.lastName;
				p = resource1.points;
				pts.text = p;
				userName.text=resource;
				userName.y=90;
				userName.x=80;
				pts.y=158;
				pts.x=137;
				this.addElement(userName);
				this.addElement(pts);	
				for each (var review:Object in response.getData().reviews){
					this.rgroup = new Group;
					
				}
				}		
				else
				{
					trace('failed: ' + response.getData());
				}
			}
			
			protected function image1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.replaceView(map);
			}
			
			protected function image2_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub

			}
			
			protected function image3_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.replaceView(trades);
			}
			
			protected function image4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.replaceView(Availible_items);
			}
						
			protected function itemsButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				navigator.replaceView(Availible_items);
			}
			
		]]>
	</fx:Script>

	<s:Image x="0" y="-240" width="320" source="assets/bg.png"/>
	<s:Rect x="135" y="118" width="121" height="25">
		<s:fill>
			<s:SolidColor color="#659e35"/>
		</s:fill>
	</s:Rect>
	<s:Image x="0" width="320" height="480" source="assets/bg3.png"/>
	<s:Image x="-1" y="-4" width="321" height="90" source="assets/Untitled-2.jpg"/>
	<s:Image x="1" y="0" width="77" height="76" click="image1_clickHandler(event)"
			 source="assets/Untitled-2.png" smooth="true"/>
	<s:Image x="80" y="0" width="74" height="76" click="image2_clickHandler(event)"
			 source="assets/Untitled-23.png" smooth="true"/>
	<s:Image x="155" y="-2" width="75" height="74" click="image3_clickHandler(event)"
			 source="assets/Untitled-24.png" smooth="true"/>
	<s:Image x="239" y="-2" width="68" height="77" click="image4_clickHandler(event)"
			 source="assets/Untitled-25.png" smooth="true"/>
	<s:Rect x="0" y="82" width="75" height="145">
		<s:fill>
			<s:BitmapFill source="assets/man.png"/>
		</s:fill>
	</s:Rect>
	<s:Scroller x="75" y="267" width="245" height="148">
		<s:VGroup id="wrapper">
			
		</s:VGroup>
	</s:Scroller>	
	<s:Image id="itemsButton" x="75" y="183" width="169" height="49" source="assets/Profileitems.png" click="itemsButton_clickHandler(event)"/>


	
</s:View>
